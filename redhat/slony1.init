#!/bin/sh
# postgresql    This is the init script for starting up the Slony-I
#
# chkconfig: - 64 36
# description: Starts and stops the Slon daemon that handles
#              Slony-I replication.
# processname: slon
# pidfile:	/var/run/slon.pid
#
# v1.0.0 Devrim GUNDUZ <devrim@CommandPrompt.com>
# - Initial version of Red Hat / Fedora init script, based on Ubuntu one.


# Set defaults for configuration variables
SLONENGINE=/usr/bin
SLONDAEMON=$SLONENGINE/slon
SLONCONF=/etc/slon.conf
SLONPID=/var/run/slon/slon.pid
SLONLOG=/var/log/slony

# Find the name of the script
NAME=`basename $0`
if [ ${NAME:0:1} = "S" -o ${NAME:0:1} = "K" ]
then
	NAME=${NAME:3}
fi

# Override parameters
if [ -r /etc/sysconfig/$NAME ]; then
    . /etc/sysconfig/$NAME
fi

# Source function library.
INITD=/etc/rc.d/init.d
. $INITD/functions

# Get function listing for cross-distribution logic.
TYPESET=`typeset -f|grep "declare"`

# Get config.
. /etc/sysconfig/network

# Check that networking is up.
# We need it for slon
[ "${NETWORKING}" = "no" ] && exit 0

test -x $SLONDAEMON || exit 5


script_result=0

start(){
	exec 3<> $SLONLOG
	echo -n "Starting ${NAME}: "
	daemon --user postgres --pidfile=${SLONPID} --check ${NAME} "$SLONDAEMON -f $SLONCONF -p $SLONPID 2>&3 >&3 &" 3>> "$SLONLOG" < /dev/null
	RETVAL=$?
	if [ $RETVAL = 0 ]; then
		touch /var/lock/subsys/${NAME}
	fi
	echo
	return $RETVAL
}

stop(){
	echo -n $"Stopping ${NAME} service: "
	killproc -p ${SLONPID} ${NAME}
	RETVAL=$?
	if [ $RETVAL = 0 ]; then
		rm -f /var/lock/subsys/${NAME}
	fi
	echo
        return $?
}

restart(){
    stop
    start
}

condrestart(){
    [ -e /var/lock/subsys/${NAME} ] && restart
}

condstop(){
    [ -e /var/lock/subsys/${NAME} ] && stop
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
	status -p ${SLONPID} ${NAME}
        ;;
  restart)
        restart
        ;;
  condrestart)
        condrestart
        ;;
  condstop)
        condstop
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|condstop}"
        exit 1
esac

exit $script_result
